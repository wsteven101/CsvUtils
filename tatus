[1mdiff --git a/README.md b/README.md[m
[1mindex 715cb24..1e1add5 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,34 +1,22 @@[m
 ï»¿[m
[31m-<h1>[m
[31m-C# CSV Reader[m
[31m-</h1>[m
[32m+[m[32m#C# CSV Reader[m
 [m
[31m-<body>[m
[31m-    <p></p>[m
[31m-    <h2>Library Description</h2>[m
[31m-    <p>This library provides a CSV (comma separated) stream read which can for example be used to read a file, string or other stream returning a record for each line.</p>[m
[31m-    <p>[m
[32m+[m[32m## Library Description[m
[32m+[m[32mThis library provides a CSV (comma separated) stream read which can for example be used to read a file, string or other stream returning a record for each line.[m
[32m+[m[41m  [m
[32m+[m[32m###Class: CsvRecord[m
[32m+[m[41m    [m
[32m+[m[32mThis class contains details of each field within a given csv line storing their values as strings accesible by type methods e.g. GetInt(fieldName)[m
 [m
[31m-    </p>[m
[31m-    <h3>Class: CsvRecord</h3>[m
[31m-    </p>[m
[31m-    <p>This class contains details of each field within a given csv line storing their values as strings accesible by type methods e.g. GetInt(fieldName)</p>[m
[31m-    <p></p>[m
[32m+[m[32m###Class: CsvReader[m
[32m+[m[32mReads a stream (e.g. file) line by line and returns an instance of CsvRecord class for each line.[m
 [m
[31m-    <h3>Class: CsvReader</h3>[m
[31m-    <p>Reads a stream (e.g. file) line by line and returns an instance of CsvRecord class for each line.</p>[m
[31m-    <p></p>[m
[32m+[m[32m###Class: RecordReaderBase<T>[m
[32m+[m[32mBase class for a type safe version of CsvReader. A templated abstract class which takes a CsvReader instance, injected via the constructor, and provides the same interface as the CsvReader class except that it returns records of type T. This class should be inherited from for a specif record type. The derived class's constructor should call this base class's constructor with an instance of ICsvReader. The derived class should also override the ToRecord() function to provide a conversion method that takes a CsvRecord and returns an instance of type T.[m
 [m
[31m-    <h3>Class: RecordReaderBase<T></h3>[m
[31m-    <p>Base class for a type safe version of CsvReader. A templated abstract class which takes a CsvReader instance, injected via the constructor, and provides the same interface as the CsvReader class except that it returns records of type T. This class should be inherited from for a specif record type. The derived class's constructor should call this base class's constructor with an instance of ICsvReader. The derived class should also override the ToRecord() function to provide a conversion method that takes a CsvRecord and returns an instance of type T.</p>[m
[31m-    <p></p>[m
[32m+[m[32m##Example of a Typed Csv Reader[m
[32m+[m[32m###Class: TradeRecordReader[m
[32m+[m[32mA derivation of the generic base class RecordReaderBase for records (classes) of type TradeRecord. It provides the same interface as the CsvRecord except it returns TradeRecord instead of CsvRecord[m
 [m
[31m-    <h2>Example of a Typed Csv Reader</h2>[m
[31m-    <h3>Class: TradeRecordReader</h3>[m
[31m-    <p>A derivation of the generic base class RecordReaderBase for records (classes) of type TradeRecord. It provides the same interface as the CsvRecord except it returns TradeRecord instead of CsvRecord</p>[m
[31m-[m
[31m-[m
[31m-    <p></p>[m
[31m-    <h2>Future Improvements</h2>[m
[31m-    <p>Make asynchronous methods/class for file access</p>[m
[31m-</body>[m
[32m+[m[32m##Future Improvements[m
[32m+[m[32mMake asynchronous methods/class for file access[m
